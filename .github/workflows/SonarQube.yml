name: Generate Coverage Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generate-coverage:
    runs-on: self-hosted

    env:
      DOTNET_ROOT: ${{ github.workspace }}/.dotnet
      PATH: ${{ github.workspace }}/.dotnet:$PATH:/usr/bin:/home/runner/.dotnet/tools:$PATH
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Install dependencies
        run: dotnet restore Pazar/Pazar.sln

      - name: Build project
        run: dotnet build --no-restore --configuration Release Pazar/Pazar.sln

      - name: Install dotCover
        run: |
          dotnet tool install --global JetBrains.dotCover.GlobalTool
          echo "PATH after dotCover installation: $PATH"
          echo "Tools directory: $HOME/.dotnet/tools"
          ls -l $HOME/.dotnet/tools
          which dotcover

      - name: Verify dotCover Installation
        run: |
          echo "Verifying dotCover installation"
          dotnet tool list --global

      - name: Run tests with coverage
        run: |
          mkdir -p ${{ github.workspace }}/coverage
          export PATH="$PATH:$HOME/.dotnet/tools"
          dotcover test Pazar/Pazar.sln --dcReportType=HTML --output="${{ github.workspace }}/coverage/dotCover.Output.html"
          echo "Checking coverage directory contents:"
          ls -l ${{ github.workspace }}/coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ${{ github.workspace }}/coverage/dotCover.Output.html
